# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py test
            flake8 --exclude polls/migrations/,manage.py,./venv/  .

    deployment:
    branch: master
    commands:
      - |
        cat >~/.netrc <<EOF
        machine api.heroku.com
          login ${HEROKU_EMAIL}
          password ${HEROKU_PASSWORD}
        machine git.heroku.com
          login ${HEROKU_EMAIL}
          password ${HEROKU_PASSWORD}
        EOF
      - chmod 600 ~/.netrc # Heroku cli complains about permissions without this
      - "[[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow"
      # - git subtree push --prefix darcyWeb git@heroku.com:gcs01-rafaelrabetti-circle.git master
      - git push git@heroku.com:gcs01-rafaelrabetti-circle.git `git subtree split --prefix darcyWeb master`:master --force

      - store_artifacts:
          path: test-reports
          destination: test-reports
